src/room.dart:      SyncUpdate(
src/room.dart:    final syncUpdate = SyncUpdate(
src/room.dart:          SyncUpdate(
src/room.dart:          SyncUpdate(
src/room.dart:  Future<void> _handleFakeSync(SyncUpdate syncUpdate,
src/client.dart:  final StreamController<SyncUpdate> onSync = StreamController.broadcast();
src/client.dart:      ).then((v) => Future<SyncUpdate?>.value(v)).catchError((e) {
src/client.dart:  Future<void> handleSync(SyncUpdate sync, {bool sortAtTheEnd = false}) async {
src/client.dart:  Future<void> _handleSync(SyncUpdate sync, {bool sortAtTheEnd = false}) async {
src/utils/sync_update_item_count.dart:extension SyncUpdateItemCount on SyncUpdate {
src/utils/sync_update_extension.dart:extension SyncUpdateFilters on SyncUpdate {
src/timeline.dart:  StreamSubscription<SyncUpdate>? roomSub;
src/timeline.dart:  /// Removes all entries from [events] which are not in this SyncUpdate.
src/timeline.dart:  void _removeEventsNotInThisSync(SyncUpdate sync) {
src/event.dart:          SyncUpdate(
